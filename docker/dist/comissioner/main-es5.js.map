{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","appService","formBuilder","title","selectedAgency","createOrUpdateForm","group","name","country","countryCode","city","street","settlementCurrency","contactPerson","subscription","getAgencies","unsubscribe","agency","get","setValue","reset","deleteAgency","agencyData","console","log","createOrUpdateAgency","getAll","subscribe","agencies","error","createOrUpdate","delete","onSubmit","deleteSelectedAgency","clearSelectedAgency","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AppService","http","url","apiAgency","pipe","apiAllAgencies","myAgencies","map","apiSingleAgency","getAgency","put","post","environment","production","bootstrapModule","catch","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Subscription } from 'rxjs'\nimport { AppService } from './app.service';\nimport { Agency } from './agency.interface'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'comissioner';\n  agencies: Agency[];\n  private subscription: Subscription;\n  createOrUpdateForm;\n  selectedAgency: Agency = null;\n\n  constructor(private appService: AppService, private formBuilder: FormBuilder) {\n    this.createOrUpdateForm = this.formBuilder.group({\n      name: '',\n      country: '',\n      countryCode: '',\n      city: '',\n      street: '',\n      settlementCurrency: '',\n      contactPerson: ''\n    })\n  }\n\n  ngOnInit() {\n    this.subscription = this.getAgencies();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  getItemClass(agency: Agency): String {\n    return agency === this.selectedAgency ? 'active' : 'inactive'\n  }\n\n  setSelectedAgency(agency: Agency) {\n    this.selectedAgency = agency\n    this.createOrUpdateForm.get(\"name\").setValue(agency.name)\n    this.createOrUpdateForm.get(\"country\").setValue(agency.country)\n    this.createOrUpdateForm.get(\"countryCode\").setValue(agency.countryCode)\n    this.createOrUpdateForm.get(\"city\").setValue(agency.city)\n    this.createOrUpdateForm.get(\"street\").setValue(agency.street)\n    this.createOrUpdateForm.get(\"settlementCurrency\").setValue(agency.settlementCurrency)\n    this.createOrUpdateForm.get(\"contactPerson\").setValue(agency.contactPerson)\n  }\n\n  clearSelectedAgency() {\n    this.selectedAgency = null\n    this.createOrUpdateForm.reset()\n  }\n\n  deleteSelectedAgency() {\n    if (this.selectedAgency != null) {\n      return this.deleteAgency(this.selectedAgency)\n    }\n  }\n\n  onSubmit(agencyData: Agency) {\n    console.log(\"Submitted \",agencyData)\n    this.createOrUpdateAgency(agencyData, this.selectedAgency)\n    this.selectedAgency = null\n    this.createOrUpdateForm.reset()\n  }\n\n  getAgencies(): Subscription {\n    return this.appService.getAll()\n      .subscribe(agencies => { this.agencies = agencies }, error => console.log(error))\n  }\n\n  createOrUpdateAgency(agency: Agency, selectedAgency: Agency) {\n    console.log(\"createOrUpdate\", agency, selectedAgency)\n    return this.appService.createOrUpdate(agency, selectedAgency).subscribe(() => console.log(\"Creating or updating agency\", agency.name))\n  }\n\n  deleteAgency(agency: Agency) {\n    console.log(\"CAUTION! Deleting\", agency.name)\n    this.appService.delete(agency).subscribe(() => console.log(\"Deleting agency\", agency.name))\n  }\n}\n","<h1>Commissioner</h1>\n\n<h2>List of available agencies</h2>\n\n<div *ngIf=\"undefined === agencies\">Loading...</div>\n<div *ngIf=\"undefined !== agencies\">\n  <ul>\n    <li *ngFor=\"let agency of agencies\" \n      [innerHTML]=\"agency.name\"\n      [ngClass]=\"getItemClass(agency)\"\n      (click)=\"setSelectedAgency(agency)\">\n  </li>\n  </ul>\n</div>\n\n<form [formGroup]=\"createOrUpdateForm\" (ngSubmit)=\"onSubmit(createOrUpdateForm.value)\">\n  <h3>Create/Update agency</h3>\n\n  <div>\n    <input id=\"name\" type=\"text\" formControlName=\"name\" placeholder=\"Name\" size=\"50\">\n  </div>\n\n  <div>\n    <input id=\"country\" type=\"text\" formControlName=\"country\" placeholder=\"Country\" size=\"50\">\n  </div>\n\n  <div>\n    <input id=\"countryCode\" type=\"text\" formControlName=\"countryCode\" placeholder=\"Country Code\" size=\"50\">\n  </div>\n\n  <div>\n    <input id=\"city\" type=\"text\" formControlName=\"city\" placeholder=\"City\" size=\"50\">\n  </div>\n\n  <div>\n    <input id=\"street\" type=\"text\" formControlName=\"street\" placeholder=\"Street\" size=\"50\">\n  </div>\n\n  <div>\n    <input id=\"settlementCurrency\" type=\"text\" formControlName=\"settlementCurrency\" placeholder=\"Settlement Currency\" size=\"50\">\n  </div>\n\n  <div>\n    <input id=\"contactPerson\" type=\"text\" formControlName=\"contactPerson\" placeholder=\"Contact Person\" size=\"50\">\n  </div>\n\n  <button class=\"button\" type=\"submit\">Save</button>\n\n</form>\n\n<div class=\"controls\">\n  <button class=\"delete button\" (click)=\"deleteSelectedAgency()\">Delete</button>\n  <button class=\"button\" (click)=\"clearSelectedAgency()\">Reset</button>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { AppService } from './app.service';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [\n    AppService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Agency } from './agency.interface';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n\r\n  protected url : string = 'http://localhost:8080/api/agency/';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n\r\n  getAgency(apiAgency: APIAgency): Agency {\r\n      return {\r\n        'name': apiAgency.name,\r\n        'country': apiAgency.country,\r\n        'countryCode': apiAgency.countryCode,\r\n        'city': apiAgency.city,\r\n        'street': apiAgency.street,\r\n        'settlementCurrency': apiAgency.settlementCurrency,\r\n        'contactPerson': apiAgency.contactPerson,\r\n        'id': apiAgency.id\r\n      }\r\n  }\r\n\r\n  getAll() {\r\n    return this.http\r\n      .get<Agency[]>(this.url)\r\n      .pipe(map(apiAllAgencies => {\r\n          const myAgencies: Agency[] = apiAllAgencies\r\n          .map(apiSingleAgency => this.getAgency(apiSingleAgency));\r\n        console.log(myAgencies)\r\n        return myAgencies;\r\n      }))\r\n  }\r\n\r\n  createOrUpdate(agency, selectedAgency) {\r\n    if (selectedAgency != null) {\r\n      console.log(\"update\")\r\n      console.log(this.url + \"updateAgency/\" + selectedAgency.name)\r\n      return this.http.put(this.url + \"updateAgency/\" + selectedAgency.name, agency)\r\n    } else {\r\n      console.log(\"create\")\r\n      console.log(this.url + \"createAgency\", agency.name)\r\n      return this.http.post(this.url + \"createAgency\", agency)\r\n    }\r\n  }\r\n\r\n  delete(agency) {\r\n    return this.http.delete(this.url + \"deleteAgency/\" + agency.name)\r\n  }\r\n\r\n}\r\n\r\ninterface APIAgency {\r\n    'name': String;\r\n    'country': String;\r\n    'countryCode': String;\r\n    'city': String;\r\n    'street': String;\r\n    'settlementCurrency': String;\r\n    'contactPerson': String;\r\n    'id': Number;\r\n  }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}